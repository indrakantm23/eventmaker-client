[{"E:\\Eventmaker\\eventmaker-client\\src\\index.js":"1","E:\\Eventmaker\\eventmaker-client\\src\\App.js":"2","E:\\Eventmaker\\eventmaker-client\\src\\reportWebVitals.js":"3","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Header.js":"4","E:\\Eventmaker\\eventmaker-client\\src\\components\\dashboard.js":"5","E:\\Eventmaker\\eventmaker-client\\src\\components\\Dashboard.js":"6","E:\\Eventmaker\\eventmaker-client\\src\\AppTemplate.js":"7","E:\\Eventmaker\\eventmaker-client\\src\\routing\\Routing.web.js":"8","E:\\Eventmaker\\eventmaker-client\\src\\components\\About.js":"9","E:\\Eventmaker\\eventmaker-client\\src\\routing\\routes.js":"10","E:\\Eventmaker\\eventmaker-client\\src\\components\\Contact.js":"11","E:\\Eventmaker\\eventmaker-client\\src\\components\\commonService.js":"12","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\EventCard.js":"13","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Calendar.js":"14","E:\\Eventmaker\\eventmaker-client\\src\\components\\CreateEvent.js":"15","E:\\Eventmaker\\eventmaker-client\\src\\components\\firebase-store.js":"16","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Form.js":"17","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\FormFields.js":"18","E:\\Eventmaker\\eventmaker-client\\src\\store.js":"19","E:\\Eventmaker\\eventmaker-client\\src\\actions\\postActions.js":"20","E:\\Eventmaker\\eventmaker-client\\src\\actions\\types.js":"21","E:\\Eventmaker\\eventmaker-client\\src\\reducers\\index.js":"22","E:\\Eventmaker\\eventmaker-client\\src\\reducers\\postReducer.js":"23","E:\\Eventmaker\\eventmaker-client\\src\\location.js":"24","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Signup.js":"25","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Login.js":"26","E:\\Eventmaker\\eventmaker-client\\src\\auth\\AuthService.js":"27","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\PaymentForm.js":"28","E:\\Eventmaker\\eventmaker-client\\src\\components\\Event.js":"29","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Footer.js":"30","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\ContactUs.js":"31","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Pricing.js":"32","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\About.js":"33","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Cities.js":"34","E:\\Eventmaker\\eventmaker-client\\src\\components\\Events.js":"35","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Alert.js":"36"},{"size":497,"mtime":1609264131808,"results":"37","hashOfConfig":"38"},{"size":1483,"mtime":1611712148662,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":8035,"mtime":1613927501575,"results":"41","hashOfConfig":"38"},{"size":1652,"mtime":1609066838412,"results":"42","hashOfConfig":"38"},{"size":3219,"mtime":1612716596225,"results":"43","hashOfConfig":"38"},{"size":1624,"mtime":1612446251394,"results":"44","hashOfConfig":"38"},{"size":138,"mtime":1608992827592,"results":"45","hashOfConfig":"38"},{"size":956,"mtime":1609301198196,"results":"46","hashOfConfig":"38"},{"size":316,"mtime":1612716239867,"results":"47","hashOfConfig":"38"},{"size":1590,"mtime":1609302220272,"results":"48","hashOfConfig":"38"},{"size":3024,"mtime":1614511602968,"results":"49","hashOfConfig":"38"},{"size":760,"mtime":1612716852965,"results":"50","hashOfConfig":"38"},{"size":1218,"mtime":1610881814771,"results":"51","hashOfConfig":"38"},{"size":3942,"mtime":1613929005345,"results":"52","hashOfConfig":"38"},{"size":593,"mtime":1610890188099,"results":"53","hashOfConfig":"38"},{"size":11158,"mtime":1613928938059,"results":"54","hashOfConfig":"38"},{"size":598,"mtime":1609582297365,"results":"55","hashOfConfig":"38"},{"size":440,"mtime":1609301490766,"results":"56","hashOfConfig":"38"},{"size":668,"mtime":1609302139283,"results":"57","hashOfConfig":"38"},{"size":80,"mtime":1609302206612,"results":"58","hashOfConfig":"38"},{"size":146,"mtime":1609299753307,"results":"59","hashOfConfig":"38"},{"size":514,"mtime":1609302159782,"results":"60","hashOfConfig":"38"},{"size":3160,"mtime":1611743412844,"results":"61","hashOfConfig":"38"},{"size":9054,"mtime":1610890059569,"results":"62","hashOfConfig":"38"},{"size":4084,"mtime":1610887099538,"results":"63","hashOfConfig":"38"},{"size":756,"mtime":1609680295683,"results":"64","hashOfConfig":"38"},{"size":7576,"mtime":1611833738615,"results":"65","hashOfConfig":"38"},{"size":14476,"mtime":1614511815776,"results":"66","hashOfConfig":"38"},{"size":294,"mtime":1612080609704,"results":"67","hashOfConfig":"38"},{"size":168,"mtime":1612144433722,"results":"68","hashOfConfig":"38"},{"size":161,"mtime":1612144461244,"results":"69","hashOfConfig":"38"},{"size":155,"mtime":1612144448867,"results":"70","hashOfConfig":"38"},{"size":18010,"mtime":1612369736876,"results":"71","hashOfConfig":"38"},{"size":974,"mtime":1612454534909,"results":"72","hashOfConfig":"38"},{"size":1153,"mtime":1613928994691,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"gi9y1b",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"76"},"E:\\Eventmaker\\eventmaker-client\\src\\index.js",[],["161","162"],"E:\\Eventmaker\\eventmaker-client\\src\\App.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\reportWebVitals.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Header.js",["163"],"import React, { useState, useEffect } from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Logo1 from './../assets/images/event-maker-logo1.png';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { CITIES } from './Cities';\r\nimport './Header.scss';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nfunction Header(props){\r\n\r\n    const [state, setState] = useState(false);\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [userData, setUserData] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [filteredCity, setFilteredCity] = useState([]);\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const toggleDrawer = (open) => (event) => {\r\n        setState(open)\r\n    }\r\n    useEffect(() => {\r\n        setLoggedIn(localStorage.getItem('isLoggedIn'));\r\n        setUserData({...JSON.parse(localStorage.getItem('userData'))})\r\n    }, [])\r\n\r\n    const searchEvent = (e) => {\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const getCityName = (e)=>{\r\n        let str = e.target.value;\r\n        if(str.length > 2) {\r\n            SearchCity(str)\r\n        }else{\r\n            setFilteredCity([]);\r\n        }\r\n    }\r\n    const setCity = (city)=> {\r\n        localStorage.setItem('currentLocation', city)\r\n    }\r\n\r\n    const SearchCity = (str) => {\r\n        setFilteredCity(CITIES.filter(a => a.toLowerCase().includes(str.toLowerCase())).slice(0, 5))\r\n    }\r\n\r\n    const list = () => (\r\n        <List>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/\" }}><HomeIcon/>Home</Button>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/about\" }}><InfoIcon/>About</Button>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/contact-us\" }}><EmailIcon/>Contact</Button>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/pricing\" }}><PaymentIcon/>Pricing</Button>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/contact\" }}><HelpOutlineIcon/>How it works</Button>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/contact\" }}><AccountBalanceWalletIcon/>Wallet</Button>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/contact\" }}><ConfirmationNumberIcon/>My Bookings</Button>\r\n            <Button className=\"sidebar-btn\" onClick={() => { window.location.href=\"/contact\" }}><EventIcon/>My Events</Button>\r\n        </List>\r\n    )\r\n\r\n    return(\r\n        <header>\r\n            <MenuIcon onClick={toggleDrawer(true)} className=\"menu-icon\" />\r\n            <Drawer \r\n                anchor={'left'}\r\n                open={state}\r\n                onClose={toggleDrawer(false)}\r\n            >\r\n\r\n                {isLoggedIn ? \r\n                    <div style={{background: '#06101f', height: 100}}>\r\n                        <Avatar alt={`${userData?.firstName} ${userData?.lastName}`} src={userData?.avatar}/>\r\n                        <h4 className=\"profile-name\">Indrakant Mishra</h4>\r\n                    </div>\r\n                :\r\n                <Button variant=\"outlined\" color=\"primary\" style={{color: '#000', textTransform: 'inherit', borderColor: 'dimgray', width: 100, margin: '0 auto'}} onClick={()=> window.location.href=\"/login\"}>\r\n                    Sign in\r\n                </Button>}\r\n\r\n                {list()}\r\n            </Drawer>\r\n\r\n            <img src={Logo1} onClick={() => { window.location.href=\"/\" }} style={{cursor: 'pointer', width: 160, float: 'left'}}/>\r\n\r\n            {/* <Tooltip title={props.currentLocation.city.fullAddress} arrow> */}\r\n            <Button style={{marginTop: 15}} color=\"primary\" onClick={()=>setOpen(true)}><RoomIcon/>{props.currentLocation.city.currentCity}</Button>\r\n            {/* </Tooltip> */}\r\n\r\n            {isLoggedIn ? \r\n                <Tooltip title={`Logged in as ${userData.firstName} ${userData.lastName}`} arrow>\r\n                    <Avatar alt={userData.firstName+' '+ userData.lastName} src={userData?.avatar} style={{display: 'inline-flex', float: 'left', position: 'absolute', top: -5, marginLeft: 12}} />\r\n                </Tooltip>\r\n            :\r\n            <Button variant=\"outlined\" color=\"primary\" style={{color: 'white', textTransform: 'inherit', marginLeft: 20, borderColor: 'dimgray'}} onClick={()=> window.location.href=\"/login\"}>\r\n                Sign in\r\n            </Button>}\r\n\r\n            <div className=\"search-div\">\r\n                <Button color=\"primary\" className=\"add-btn\" onClick={() => { window.location.href=\"/create-an-event\" }}>\r\n                    Create Event\r\n                </Button>\r\n                {/* <input type=\"text\" placeholder=\"Search an Event, City or Organiser..\" /> */}\r\n                <DebounceInput\r\n                    minLength={2}\r\n                    debounceTimeout={300}\r\n                    placeholder=\"Search an Event, City or Organiser..\"\r\n                    onChange={event => searchEvent(event)} \r\n                />\r\n                <SearchIcon/>\r\n            </div>\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Not in {props.currentLocation.city.currentCity}?</DialogTitle>\r\n                <DialogContent>\r\n                    {/* <span style={{marginBottom: 10, display: 'block', fontSize: 13}}>Change your location</span> */}\r\n                    <TextField id=\"standard-basic\" className=\"city-name\" autoFocus label=\"Enter your city name\" onChange={(e) => getCityName(e)} />\r\n                    <div>\r\n                        \r\n                    </div>\r\n                    {filteredCity.length>0 &&\r\n                    <div>\r\n                        {filteredCity.map((res) => {\r\n                            return(\r\n                                <li className=\"list\" onClick={()=> setCity(res)}>{res}</li>\r\n                            )\r\n                        })}    \r\n                    </div>}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" className=\"cancel-location\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" className=\"save-location\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","E:\\Eventmaker\\eventmaker-client\\src\\components\\dashboard.js",["164"],"E:\\Eventmaker\\eventmaker-client\\src\\components\\Dashboard.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\AppTemplate.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\routing\\Routing.web.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\About.js",["165"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../actions/postActions';\r\nimport Contact from './Contact';\r\n\r\nclass About extends Component {\r\n\r\n    componentWillMount(){\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    render() {\r\n        const postItems = this.props.posts.map(post => (\r\n            <div key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n            </div>\r\n        ))\r\n        return (\r\n            <div>\r\n                <Contact/>\r\n                <h1>Posts</h1>\r\n                {postItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// About.PropTypes = {\r\n//     fetchPosts: PropTypes.func.isRequired, \r\n//     posts: PropTypes.array.isRequired\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(About);",["166","167"],"E:\\Eventmaker\\eventmaker-client\\src\\routing\\routes.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\Contact.js",["168"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createPosts } from '../actions/postActions';\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            title: '',\r\n            body: ''\r\n        }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const post = {\r\n            title: this.state.title,\r\n            body: this.state.body\r\n        }\r\n        this.props.createPosts(post);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Form</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                        <label>Title: </label><br/>\r\n                        <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.onChange} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Body: </label><br/>\r\n                        <input type=\"text\" name=\"body\" value={this.state.body} onChange={this.onChange} />\r\n                    </div>\r\n                    <br/>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Contact.prototype = {\r\n//     createPosts: PropTypes.func.isRequired\r\n// }\r\n\r\nexport default connect(null, { createPosts })(Contact);","E:\\Eventmaker\\eventmaker-client\\src\\components\\commonService.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\EventCard.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Calendar.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\CreateEvent.js",["169","170"],"import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport EventForm from './pages/Form';\r\nimport PaymentForm from './pages/PaymentForm';\r\nimport AlertMessage from './../shared/Alert';\r\nimport './common.scss';\r\nimport CommonService from './commonService';\r\n\r\nclass CreateEvent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loader: false,\r\n            activeStep: 0,\r\n            eventBanner: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n      \r\n      setActiveStep = (step) => {\r\n          this.activeStep = step;\r\n      }\r\n\r\n      // handleNext = () => {\r\n      //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      // };\r\n\r\n      // handleBack = () => {\r\n      //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n      // };\r\n\r\n      // handleReset = () => {\r\n      //   setActiveStep(0);\r\n      // };\r\n\r\n\r\n      GetComponent(){\r\n        switch(this.state.activeStep) {\r\n          case 0:\r\n            return <EventForm onclick={this.changeHandle} />\r\n          case 1:\r\n            return <PaymentForm onclick={this.handlePaymentSetup} />\r\n            \r\n        }\r\n      }\r\n\r\n      changeHandle = (e) => {\r\n        console.log(e)\r\n        localStorage.setItem('eventdetails', JSON.stringify(e))\r\n        this.setState({ activeStep: this.state.activeStep+1 });\r\n        window.scrollTo(0,0);\r\n      }\r\n\r\n      handlePaymentSetup = (e)=> {\r\n        \r\n        localStorage.setItem('paymentdetails', JSON.stringify(e))\r\n        this.setState({ activeStep: this.state.activeStep+1 });\r\n        let eventData = JSON.parse(localStorage.getItem('eventdetails'));\r\n        let paymentData = JSON.parse(localStorage.getItem('paymentdetails'));\r\n        const obj = Object.assign(eventData, paymentData)\r\n        \r\n        console.log(obj)\r\n        \r\n        CommonService.saveEvent(obj).then((res) => {\r\n          <AlertMessage label='Your event has been published'/>\r\n          console.log(res);\r\n            localStorage.removeItem('eventdetails')\r\n            localStorage.removeItem('paymentdetails')\r\n            localStorage.removeItem('full_address')\r\n            localStorage.removeItem('evtLat')\r\n            localStorage.removeItem('state')\r\n            localStorage.removeItem('city')\r\n            localStorage.removeItem('country')\r\n            localStorage.removeItem('evtLng')\r\n        })\r\n      }\r\n\r\n    render(){\r\n      // const classes = useStyles();\r\n      const steps = getSteps();\r\n        return(\r\n            <div className=\"create-event-div\">\r\n                <h1>Create an Event</h1>\r\n                <Stepper activeStep={this.state.activeStep} alternativeLabel>\r\n                    {steps.map((label) => (\r\n                      <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                      </Step>\r\n                    ))}\r\n                </Stepper>\r\n\r\n                  {this.GetComponent()}\r\n\r\n                <Backdrop open={this.state.loader}>\r\n                    <CircularProgress color=\"inherit\" style={{'color': '#fff'}}/>\r\n                </Backdrop>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getSteps() {\r\n  return ['Add Event Venue and Details', 'Setup Payment & Ticketing Method', 'Publish Your Event'];\r\n}\r\n\r\n// function getStepContent(stepIndex) {\r\n//   switch (stepIndex) {\r\n//     case 0:\r\n//       return 'Select campaign settings...';\r\n//     case 1:\r\n//       return 'What is an ad group anyways?';\r\n//     case 2:\r\n//       return 'This is the bit I really care about!';\r\n//     default:\r\n//       return 'Unknown stepIndex';\r\n//   }\r\n// }\r\n\r\nexport default CreateEvent;\r\n","E:\\Eventmaker\\eventmaker-client\\src\\components\\firebase-store.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Form.js",["171","172","173","174","175","176","177"],"import React, { useState, useEffect } from 'react';\r\nimport {initAutocomplete} from './../../location';\r\nimport { Input, Label } from './FormFields';\r\nimport { storage } from './../firebase-store';\r\nimport CommonService from './../commonService';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { EditorState } from 'draft-js';\r\nimport './../common.scss';\r\n\r\n\r\n function EventForm(props){\r\n    \r\n    useEffect(()=> {\r\n        initAutocomplete();\r\n    }, [])\r\n\r\n    const [eventName, setEventName] = useState('');\r\n    const [startDate, setStartDate] = useState(getCurrentDate());\r\n    const [endDate, setEndDate] = useState(getCurrentDate());\r\n    const [startTime, setStartTime] = useState(getCurrentTime());\r\n    const [endTime, setEndTime] = useState(getCurrentTime());\r\n    const [location, setLocation] = useState('');\r\n    // const [fullAddress, setFullAddress] = useState('');\r\n    // const [description, setDescription] = useState(EditorState.createEmpty());\r\n    const [description, setDescription] = useState('');\r\n    const [banner, setBanner] = useState('');\r\n    const [eventMode, setEventMode] = useState('');\r\n    const [onlineURL, setOnlineURL] = useState('');\r\n    const [loader, setLoader] = useState(false);\r\n    // const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\r\n    const clickEventBtn = () => {\r\n        const data = {\r\n            eventName,\r\n            eventMode,\r\n            startDate,\r\n            endDate,\r\n            startTime,\r\n            endTime,\r\n            city: sessionStorage.getItem('city'),\r\n            state: sessionStorage.getItem('state'),\r\n            country: sessionStorage.getItem('country'),\r\n            full_address: sessionStorage.getItem('full_address'),\r\n            evtLat: sessionStorage.getItem('evtLat'),\r\n            evtLng: sessionStorage.getItem('evtLng'),\r\n            description,\r\n            banner,\r\n            posted_on: new Date().toISOString(),\r\n            organiser: JSON.parse(localStorage.getItem('userData'))       \r\n        }\r\n        props.onclick(data)\r\n    }\r\n    \r\n    const onEditorStateChange = (editorState) => {\r\n            setDescription(editorState)\r\n      };\r\n\r\n    const PostEvent = (e) => {\r\n        e.preventDefault();\r\n        // setLoader(true);\r\n        // // let location = document.getElementById('pac-input')?.value;\r\n        // let data = {\r\n        //     eventName,\r\n        //     eventMode,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     startTime,\r\n        //     endTime,\r\n        //     city: sessionStorage.getItem('city'),\r\n        //     state: sessionStorage.getItem('state'),\r\n        //     country: sessionStorage.getItem('country'),\r\n        //     full_address: sessionStorage.getItem('full_address'),\r\n        //     evtLat: sessionStorage.getItem('evtLat'),\r\n        //     evtLng: sessionStorage.getItem('evtLng'),\r\n        //     description,\r\n        //     banner       \r\n        // }\r\n        // CommonService.saveEvent(data).then((res) => {\r\n        //     console.log(res);\r\n        //     setLoader(false);\r\n        // })\r\n      }\r\n      \r\n    const uploadFile = (e) => {\r\n        setLoader(true);\r\n        if(e.target.files[0]){\r\n            let file = e.target.files[0];\r\n            \r\n            const uploadTask = storage.ref(`bucket/${file.name}`).put(file);\r\n            uploadTask.on(\"state_changed\", snapshot => {},\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage.ref(\"bucket\")\r\n                .child(file.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                setBanner(url)\r\n                setLoader(false);\r\n                })\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div style={{marginTop: 30, marginBottom: 30}}>\r\n            <form onSubmit={(e)=> PostEvent(e)}>\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Enter event name\" \r\n                    isRequired={true} \r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Enter the name of your Event\" \r\n                    style={{width: 400}} \r\n                    className=\"input-field\" \r\n                    value={eventName}\r\n                    onChange={(e)=> setEventName(e.target.value)} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Select Start Time\" \r\n                    isRequired={true} \r\n                />\r\n\r\n                <input \r\n                    type=\"date\" \r\n                    style={{width: 230, marginRight: 15}} \r\n                    className=\"input-field datepicker\" \r\n                    value={startDate}\r\n                    onChange={(e)=> setStartDate(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"time\" \r\n                    style={{width: 140, marginRight: 15}} \r\n                    className=\"input-field\" \r\n                    value={startTime}\r\n                    onChange={(e)=> setStartTime(e.target.value)} \r\n                />\r\n\r\n                {/* <a className=\"anchor-non-hyper\" onClick={()=>isHasEndDate(!hasEndDate)}>{hasEndDate ? 'Remove' : 'Add'} End Time</a> */}\r\n            </div>\r\n\r\n            {/* {endDate &&  */}\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Select End Time\" \r\n                    isRequired={true} \r\n                />\r\n                <input \r\n                    type=\"date\" \r\n                    style={{width: 230, marginRight: 15}} \r\n                    className=\"input-field\" \r\n                    id=\"datepicker\"\r\n                    value={endDate}\r\n                    onChange={(e)=> setEndDate(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"time\" \r\n                    style={{width: 140, marginRight: 15}} \r\n                    className=\"input-field\" \r\n                    value={endTime}\r\n                    onChange={(e)=> setEndTime(e.target.value)} \r\n                />\r\n            </div>\r\n            {/* } */}\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Event Location\" \r\n                    isRequired={true} \r\n                />\r\n                <select className=\"input-field\" onChange={(e)=> setEventMode(e.target.value)} style={{width: 414}}>\r\n                    <option>Select</option>\r\n                    <option value=\"Online\">Online / Virtually</option>\r\n                    <option value=\"Venue\">Venue</option>\r\n                </select>\r\n            </div>\r\n\r\n            {eventMode == 'Online' ?\r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Enter online URL\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter the URL to connect to event\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={onlineURL}\r\n                        id=\"online\"\r\n                        onChange={(e)=> setOnlineURL(e.target.value)} \r\n                    />\r\n            </div>\r\n            :\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Location Name\" \r\n                    isRequired={true} \r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Enter the place of Event\" \r\n                    style={{width: 400}} \r\n                    className=\"input-field\"\r\n                    id=\"pac-input\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n                    <div id=\"map\"></div>\r\n            </div>}\r\n            \r\n            <div className=\"form-input-container\" style={{position: 'relative', width: 390}}>\r\n                    <Label \r\n                        label=\"Upload Event Banner\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"file\" \r\n                        id=\"img\" \r\n                        name=\"eventmaker\" \r\n                        accept=\"video/*|image/*;capture=camera\" \r\n                        style={{display: 'none'}}\r\n                        onChange={(e)=> {uploadFile(e)}} \r\n                    />\r\n                    {banner ? \r\n                        <img src={banner} className=\"selected-img\" /> : \r\n                        <div className=\"upload-img-div\" onClick={()=> document.getElementById('img').click()}>\r\n                            <BackupIcon/>\r\n                        </div>                    \r\n                    }\r\n\r\n                </div>\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Description\" \r\n                    isRequired={true} \r\n                />\r\n                <textarea \r\n                    type=\"text\" \r\n                    placeholder=\"Enter the Description\" \r\n                    style={{width: 400, resize: 'none', height: 90}} \r\n                    className=\"input-field\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n                {/* <Editor\r\n                    editorState={description}\r\n                    toolbarClassName=\"toolbarClassName\"\r\n                    wrapperClassName=\"wrapperClassName\"\r\n                    editorClassName=\"editorClassName\"\r\n                    onEditorStateChange={onEditorStateChange}\r\n                /> */}\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"continue-btn\" onClick={()=> clickEventBtn()} >\r\n                <span>Continue to Payment method setup</span>\r\n                <ArrowForwardIcon/>\r\n            </button>\r\n            </form>\r\n\r\n            <Backdrop open={loader}>\r\n                    <CircularProgress color=\"inherit\" style={{'color': '#fff'}}/>\r\n            </Backdrop>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getCurrentDate(){\r\n    let date = new Date();\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n    return `${year}-${month < 10 ? '0'+month : month}-${day < 10 ? '0'+day : day}`;\r\n}\r\n\r\nfunction getCurrentTime(){\r\n    let time = new Date().toLocaleTimeString();\r\n    time = time.split(':');\r\n    return( `${time[0] < 10 ? \"0\"+time[0] : time[0]}:${time[1]}`)\r\n}\r\n\r\nexport default EventForm;\r\n","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\FormFields.js",["178"],"import React from 'react';\r\nimport './../common.scss';\r\n\r\nexport function Input(props){\r\n    return(\r\n        <input type={props.type} placeholder={props.placeholder} style={{width: props.width, marginRight: props.marginRight}} className=\"input-field\" value={props.value} onChange={(e)=> console.log(e.target.value)} />\r\n    )\r\n}\r\nexport function Label(props){\r\n    return(\r\n        <label className=\"label\">{props.label}</label>\r\n    )\r\n}\r\n\r\nexport function Anchor(props){\r\n    return(\r\n        <a className=\"anchor-non-hyper\">{props.label}</a>\r\n    )\r\n}\r\n","E:\\Eventmaker\\eventmaker-client\\src\\store.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\actions\\postActions.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\actions\\types.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\reducers\\index.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\reducers\\postReducer.js",["179"],"import { FETCH_POSTS, NEW_POST } from './../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    item: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_POSTS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            };\r\n        case NEW_POST:\r\n            return {\r\n                ...state,\r\n                item: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\Eventmaker\\eventmaker-client\\src\\location.js",["180"],"export const initAutocomplete = ()=> {\r\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      center: { lat: -33.8688, lng: 151.2195 },\r\n      zoom: 13,\r\n      mapTypeId: \"roadmap\",\r\n    });\r\n\r\n    function getLocality(place, area){\r\n      return place.find(a => a.types.includes(area))?.long_name;\r\n    }\r\n\r\n    // Create the search box and link it to the UI element.\r\n    const input = document.getElementById(\"pac-input\");\r\n    const searchBox = new window.google.maps.places.SearchBox(input);\r\n    map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(input);\r\n    // Bias the SearchBox results towards current map's viewport.\r\n    map.addListener(\"bounds_changed\", () => {\r\n      searchBox.setBounds(map.getBounds());\r\n    });\r\n    let markers = [];\r\n    // Listen for the event fired when the user selects a prediction and retrieve\r\n    // more details for that place.\r\n    searchBox.addListener(\"places_changed\", () => {\r\n      const places = searchBox.getPlaces();\r\n\r\n      if (places.length == 0) {\r\n        return;\r\n      }\r\n      // Clear out the old markers.\r\n      markers.forEach((marker) => {\r\n        marker.setMap(null);\r\n      });\r\n      markers = [];\r\n      // For each place, get the icon, name and location.\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      places.forEach((place) => {\r\n        if (!place.geometry) {\r\n          console.log(\"Returned place contains no geometry\");\r\n          return;\r\n        }\r\n        const icon = {\r\n          url: place.icon,\r\n          size: new window.google.maps.Size(71, 71),\r\n          origin: new window.google.maps.Point(0, 0),\r\n          anchor: new window.google.maps.Point(17, 34),\r\n          scaledSize: new window.google.maps.Size(25, 25),\r\n        };\r\n        // Create a marker for each place.\r\n        markers.push(\r\n          new window.google.maps.Marker({\r\n            map,\r\n            icon,\r\n            title: place.name,\r\n            position: place.geometry.location,\r\n          })\r\n        );\r\n        // console.log(getLocality(place.address_components, \"sublocality_level_2\"))\r\n        // console.log(getLocality(place.address_components, \"sublocality_level_1\"))\r\n        // console.log(getLocality(place.address_components, \"locality\"))\r\n        // console.log(getLocality(place.address_components, \"administrative_area_level_1\"))\r\n\r\n\r\n        sessionStorage.setItem('full_address', place.formatted_address)\r\n        sessionStorage.setItem('city', getLocality(place.address_components, \"locality\"))\r\n        sessionStorage.setItem('state', getLocality(place.address_components, \"administrative_area_level_1\"))\r\n        sessionStorage.setItem('country', getLocality(place.address_components, \"country\"))\r\n        sessionStorage.setItem('evtLat', place.geometry.location.lat())\r\n        sessionStorage.setItem('evtLng', place.geometry.location.lng())\r\n\r\n        if (place.geometry.viewport) {\r\n          // Only geocodes have viewport.\r\n          bounds.union(place.geometry.viewport);\r\n        } else {\r\n          bounds.extend(place.geometry.location);\r\n        }\r\n      });\r\n      map.fitBounds(bounds);\r\n    });\r\n  }","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Signup.js",["181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useEffect } from 'react';\r\nimport './../components/common.scss';\r\nimport { storage } from './../components/firebase-store';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Input, Label } from './../components/pages/FormFields';\r\nimport CommonService from './../components/commonService';\r\n\r\nexport default function Signup(props) {\r\n\r\n    function validateInput(e){\r\n        let val = e.target.value;\r\n        if(val == ''){\r\n            e.target.style.border='1px solid red !important'\r\n        }\r\n    }\r\n    const useStylesBootstrap = makeStyles((theme) => ({\r\n        arrow: {\r\n          color: '#c76358',\r\n        },\r\n        tooltip: {\r\n          backgroundColor: '#c76358',\r\n        },\r\n      }));\r\n    function BootstrapTooltip(props) {\r\n        const classes = useStylesBootstrap();\r\n      \r\n        return <Tooltip arrow classes={classes} {...props} />;\r\n      }\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailFocused, setEmailFocused] = useState(false);\r\n    const [passwordFocused, setPasswordFocused] = useState(false);\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [firstnameFocused, setFirstnameFocused] = useState(false);\r\n    const [lastnameFocused, setLastNameFocused] = useState(false);\r\n    const [avatar, setProfileImage] = useState('');\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [registered, setRegistered] = useState(false);\r\n\r\n\r\n    // UPLOAD IMAGE TO FIREBASE\r\n    function uploadFile (e){\r\n        setLoader(true);\r\n        if(e.target.files[0]){\r\n            let file = e.target.files[0];\r\n            \r\n            const uploadTask = storage.ref(`bucket/${file.name}`).put(file);\r\n            uploadTask.on(\"state_changed\", snapshot => {},\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage.ref(\"bucket\")\r\n                .child(file.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                console.log(url)\r\n                setProfileImage(url)\r\n                setLoader(false);\r\n                })\r\n            }\r\n            )\r\n        }\r\n        }\r\n    \r\n\r\n    function Register(e) {\r\n        setLoader(true);\r\n        e.preventDefault()\r\n        console.log(avatar)\r\n        if(firstName !== '' && lastName !== '' && email !== '' && password !== ''){\r\n            CommonService.regiserUser({firstName, lastName, email, password, avatar}).then((res) => {\r\n                console.log(res)\r\n                setLoader(false);\r\n                setRegistered(true);\r\n                setTimeout(()=> {\r\n                    window.location.href=\"/login\"\r\n                }, 2000)\r\n            })\r\n        }\r\n        else{\r\n            console.log('All fields are mandatory')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            \r\n        {!registered ? \r\n            <form style={{display: 'block', margin: '0 auto', width: '40%'}} onSubmit={(e)=> Register(e)}>\r\n                <h5 className=\"heading\">Register for complete access </h5>\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"First Name\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter your First name\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setFirstnameFocused(true)} \r\n                        onChange={(e)=> setFirstName(e.target.value)} \r\n                        value={firstName} \r\n                    />\r\n                        {firstnameFocused && firstName === '' && \r\n                        <BootstrapTooltip title=\"First Name can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                        }\r\n\r\n                </div>\r\n\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Last Name\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter your Last name\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setLastNameFocused(true)} \r\n                        onChange={(e)=> setLastName(e.target.value)} \r\n                        value={lastName} \r\n                    />\r\n                        {lastnameFocused && lastName === '' && \r\n                        <BootstrapTooltip title=\"Last Name can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                        }\r\n\r\n                </div>\r\n                \r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Email\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"email\" \r\n                        placeholder=\"Enter your email\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setEmailFocused(true)} \r\n                        onChange={(e)=> setEmail(e.target.value)} \r\n                        value={email} \r\n                    />\r\n                        {emailFocused && email === '' && \r\n                        <BootstrapTooltip title=\"Email can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                        }\r\n\r\n                </div>\r\n\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Password\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"password\" \r\n                        placeholder=\"Enter your password\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setPasswordFocused(true)} \r\n                        onChange={(e)=> setPassword(e.target.value)} \r\n                        value={password} \r\n                    />\r\n                    {passwordFocused && password === '' && \r\n                        <BootstrapTooltip title=\"Password can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Upload profile photo\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"file\" \r\n                        id=\"img\" \r\n                        name=\"eventmaker\" \r\n                        accept=\"video/*|image/*;capture=camera\" \r\n                        style={{display: 'none'}}\r\n                        onChange={(e)=> {uploadFile(e)}} \r\n                    />\r\n                    {avatar ? \r\n                        <img src={avatar} className=\"selected-img\" /> : \r\n                        <div className=\"upload-img-div\" onClick={()=> document.getElementById('img').click()}>\r\n                            <BackupIcon/>\r\n                        </div>                    \r\n                    }\r\n\r\n                </div>\r\n                <button type=\"submit\" className=\"continue-btn\">Register</button>\r\n                <span className=\"not-a-member\">Already a Member? <a onClick={()=> props.history.push(\"/login\")} className=\"anchor\">Sign in</a></span>\r\n            </form>\r\n            : \r\n            <Alert severity=\"success\">You have registered Successfully.</Alert>\r\n            }\r\n\r\n            {/* <Backdrop open={loader}>\r\n\r\n            </Backdrop> */}\r\n            {loader &&\r\n                <div className=\"backdrop\">\r\n                    <CircularProgress color=\"inherit\" style={{'color': '#FFF'}}/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Login.js",["191","192","193","194","195","196","197"],"import React, { useState, useEffect } from 'react';\r\nimport './../components/common.scss';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CommonService from './../components/commonService';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Input, Label } from './../components/pages/FormFields';\r\n\r\nexport default function Login(props) {\r\n\r\n    function validateInput(e){\r\n        let val = e.target.value;\r\n        if(val == ''){\r\n            e.target.style.border='1px solid red !important'\r\n        }\r\n    }\r\n\r\n\r\n    const useStylesBootstrap = makeStyles((theme) => ({\r\n        arrow: {\r\n          color: '#c76358',\r\n        },\r\n        tooltip: {\r\n          backgroundColor: '#c76358',\r\n        },\r\n      }));\r\n    function BootstrapTooltip(props) {\r\n        const classes = useStylesBootstrap();\r\n      \r\n        return <Tooltip arrow classes={classes} {...props} />;\r\n      }\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailFocused, setEmailFocused] = useState(false);\r\n    const [passwordFocused, setPasswordFocused] = useState(false);\r\n\r\n\r\n    function Login(e) {\r\n        e.preventDefault()\r\n        if(email !== '' && password !== ''){\r\n            CommonService.loginUser({email, password}).then((res) => {\r\n                localStorage.setItem('isLoggedIn', true);\r\n                localStorage.setItem('userData', JSON.stringify(res.user))\r\n            })\r\n        }\r\n        else{\r\n            console.log('All fields are mandatory')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            \r\n            <form style={{display: 'block', margin: '0 auto', width: '40%'}} onSubmit={(e)=> Login(e)}>\r\n                <h5 className=\"heading\">Login to continue </h5>\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Email\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"email\" \r\n                        placeholder=\"Enter your email\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setEmailFocused(true)} \r\n                        onChange={(e)=> setEmail(e.target.value)} \r\n                        value={email} \r\n                    />\r\n                        {emailFocused && email === '' && \r\n                        <BootstrapTooltip title=\"Email can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                        }\r\n\r\n                </div>\r\n\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Password\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"password\" \r\n                        placeholder=\"Enter your password\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setPasswordFocused(true)} \r\n                        onChange={(e)=> setPassword(e.target.value)} \r\n                        value={password} \r\n                    />\r\n                    {passwordFocused && password === '' && \r\n                        <BootstrapTooltip title=\"Password can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                    }\r\n                </div>\r\n                <button type=\"submit\" className=\"continue-btn\">Login</button>\r\n                <span className=\"not-a-member\">Not yet a Member? <a onClick={()=> props.history.push(\"/signup\")} className=\"anchor\">Sign up</a></span>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Eventmaker\\eventmaker-client\\src\\auth\\AuthService.js",["198","199"],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\PaymentForm.js",["200","201","202"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Input, Label } from './FormFields';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './../common.scss';\r\n\r\n\r\n\r\nfunction PaymentForm(props) {\r\n\r\n    const [entryMode, setEntrymode] = useState('');\r\n    const [avlSeats, setAvlSeats] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [ticketCategory, setTicketCategory] = useState([]);\r\n    \r\n    // TO BE INSERTED INTO TICKET CATEGORY ARRAY\r\n    const [seats, setSeats] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    \r\n    const handleChange = (event) => {\r\n        setEntrymode(event.target.value);\r\n        \r\n    };\r\n\r\n    const saveCategory = () => {\r\n        \r\n        let data = {\r\n            id: new Date().getTime(), seats, category, amount, description\r\n        }\r\n        setTicketCategory(oldArray => [...oldArray, data]);\r\n\r\n        setIsOpen(false);\r\n        setAmount('');\r\n        setCategory([]);\r\n        setSeats('');\r\n        setDescription('');\r\n        console.log(ticketCategory)\r\n    }\r\n\r\n    const clickEventBtn = () => {\r\n        const data = {\r\n            entryMode,\r\n            // seats,\r\n            // amount,\r\n            currency: 'INR',\r\n            ticketCategory,\r\n            avlSeats\r\n        }\r\n        props.onclick(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Setup </h1>\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Ticketing Method\" \r\n                    isRequired={true} \r\n                />\r\n                <RadioGroup aria-label=\"ticketing\" name=\"paid\" value={entryMode} onChange={handleChange} className=\"radiogroup\">\r\n                    <FormControlLabel value=\"free\" control={<Radio color=\"default\"/>} label=\"Free Entry\" />\r\n                    <FormControlLabel value=\"paid\" control={<Radio color=\"default\"/>} label=\"Paid Entry\" />\r\n                </RadioGroup>\r\n            </div>  \r\n\r\n            {ticketCategory.length>0 &&\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Category</TableCell>\r\n                            <TableCell align=\"right\">Seats</TableCell>\r\n                            <TableCell align=\"right\">Amount</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {ticketCategory.map((row) => (\r\n                            <TableRow key={row.category}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.category}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.seats}</TableCell>\r\n                                <TableCell align=\"right\">₹ {row.amount}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            }\r\n\r\n\r\n            {entryMode === 'free' && \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"How many seats are available?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Ex. 100\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={avlSeats}\r\n                        onChange={(e)=> setAvlSeats(e.target.value)} \r\n                    />\r\n                </div>  \r\n            }\r\n\r\n            {isOpen && \r\n            <div>\r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Enter ticket category?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"ex. (Silver/Gold/Diamond) / (Women/Men/Children)\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={category}\r\n                        onChange={(e)=> setCategory(e.target.value)} \r\n                    />\r\n                </div>  \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Ticket Amount?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter ticket amount\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={amount}\r\n                        onChange={(e)=> setAmount(e.target.value)} \r\n                    />\r\n                </div>  \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"How many Seats are available?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter total seats/ticket are available\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={seats}\r\n                        onChange={(e)=> setSeats(e.target.value)} \r\n                    />\r\n                </div>  \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Write some description (Optional)\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Ex. No outside foods allowed\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={description}\r\n                        onChange={(e)=> setDescription(e.target.value)} \r\n                    />\r\n                </div>  \r\n            </div>}\r\n\r\n            {entryMode === 'paid' &&\r\n            <div style={{margin: '20px 0'}}>\r\n                <span className=\"add-category\" onClick={() => setIsOpen(true)}><AddIcon/>Add ticket category</span>\r\n                <button type=\"button\" className=\"save-category\" onClick={() => saveCategory()}>Save</button>\r\n            </div>}\r\n\r\n            {entryMode !== '' &&\r\n            <button type=\"button\" className=\"continue-btn\" onClick={()=> clickEventBtn()} >\r\n                <span>Publish Event</span>\r\n            </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PaymentForm;","E:\\Eventmaker\\eventmaker-client\\src\\components\\Event.js",["203","204"],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Footer.js",["205"],"import React from 'react';\r\nimport Logo1 from './../assets/images/event-maker-logo1.png';\r\nimport './Footer.scss';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <img src={Logo1} style={{width: 160, float: 'left'}}/>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\ContactUs.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Pricing.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\About.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Cities.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\Events.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Alert.js",["206"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction AlertMessage(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n         {props.label}\r\n        </Alert>\r\n      </Collapse>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlertMessage;",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":112,"column":13,"nodeType":"213","endLine":112,"endColumn":131},{"ruleId":"211","severity":1,"message":"212","line":18,"column":17,"nodeType":"213","endLine":18,"endColumn":64},{"ruleId":"214","severity":1,"message":"215","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"207","replacedBy":"218"},{"ruleId":"209","replacedBy":"219"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"214","severity":1,"message":"220","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":46,"column":9,"nodeType":"223","messageId":"224","endLine":52,"endColumn":10},{"ruleId":"214","severity":1,"message":"225","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":15},{"ruleId":"214","severity":1,"message":"226","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":21},{"ruleId":"214","severity":1,"message":"227","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":16},{"ruleId":"214","severity":1,"message":"228","line":12,"column":10,"nodeType":"216","messageId":"217","endLine":12,"endColumn":21},{"ruleId":"214","severity":1,"message":"229","line":60,"column":11,"nodeType":"216","messageId":"217","endLine":60,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":193,"column":24,"nodeType":"232","messageId":"233","endLine":193,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":241,"column":25,"nodeType":"213","endLine":241,"endColumn":70},{"ruleId":"234","severity":1,"message":"235","line":17,"column":9,"nodeType":"213","endLine":17,"endColumn":41},{"ruleId":"236","severity":1,"message":"237","line":8,"column":1,"nodeType":"238","endLine":23,"endColumn":2},{"ruleId":"230","severity":1,"message":"231","line":26,"column":25,"nodeType":"232","messageId":"233","endLine":26,"endColumn":27},{"ruleId":"214","severity":1,"message":"239","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"240","line":9,"column":10,"nodeType":"216","messageId":"217","endLine":9,"endColumn":20},{"ruleId":"214","severity":1,"message":"225","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":17,"column":16,"nodeType":"232","messageId":"233","endLine":17,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":112,"column":46,"nodeType":"243","messageId":"244","endLine":112,"endColumn":47},{"ruleId":"241","severity":1,"message":"242","line":134,"column":46,"nodeType":"243","messageId":"244","endLine":134,"endColumn":47},{"ruleId":"241","severity":1,"message":"242","line":156,"column":46,"nodeType":"243","messageId":"244","endLine":156,"endColumn":47},{"ruleId":"241","severity":1,"message":"242","line":178,"column":46,"nodeType":"243","messageId":"244","endLine":178,"endColumn":47},{"ruleId":"211","severity":1,"message":"212","line":203,"column":25,"nodeType":"213","endLine":203,"endColumn":70},{"ruleId":"234","severity":1,"message":"235","line":211,"column":66,"nodeType":"213","endLine":211,"endColumn":132},{"ruleId":"214","severity":1,"message":"239","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"240","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":20},{"ruleId":"214","severity":1,"message":"225","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":13,"column":16,"nodeType":"232","messageId":"233","endLine":13,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":68,"column":46,"nodeType":"243","messageId":"244","endLine":68,"endColumn":47},{"ruleId":"241","severity":1,"message":"242","line":90,"column":46,"nodeType":"243","messageId":"244","endLine":90,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":101,"column":66,"nodeType":"213","endLine":101,"endColumn":133},{"ruleId":"214","severity":1,"message":"245","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":13},{"ruleId":"214","severity":1,"message":"246","line":15,"column":13,"nodeType":"216","messageId":"217","endLine":15,"endColumn":17},{"ruleId":"214","severity":1,"message":"239","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"247","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"225","line":2,"column":18,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"248","severity":1,"message":"249","line":74,"column":8,"nodeType":"250","endLine":74,"endColumn":10,"suggestions":"251"},{"ruleId":"211","severity":1,"message":"212","line":157,"column":29,"nodeType":"213","endLine":157,"endColumn":95},{"ruleId":"211","severity":1,"message":"212","line":9,"column":13,"nodeType":"213","endLine":9,"endColumn":67},{"ruleId":"214","severity":1,"message":"247","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":14},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["252"],["253"],"'makeStyles' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Input' is defined but never used.","'CommonService' is defined but never used.","'Editor' is defined but never used.","'EditorState' is defined but never used.","'onEditorStateChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","'withStyles' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'React' is defined but never used.","'that' is assigned a value but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props?.match?.params?.eventid'. Either include it or remove the dependency array.","ArrayExpression",["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},"Update the dependencies array to be: [props?.match?.params?.eventid]",{"range":"257","text":"258"},[2235,2237],"[props?.match?.params?.eventid]"]