[{"E:\\Eventmaker\\eventmaker-client\\src\\index.js":"1","E:\\Eventmaker\\eventmaker-client\\src\\App.js":"2","E:\\Eventmaker\\eventmaker-client\\src\\reportWebVitals.js":"3","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Header.js":"4","E:\\Eventmaker\\eventmaker-client\\src\\components\\dashboard.js":"5","E:\\Eventmaker\\eventmaker-client\\src\\components\\Dashboard.js":"6","E:\\Eventmaker\\eventmaker-client\\src\\AppTemplate.js":"7","E:\\Eventmaker\\eventmaker-client\\src\\routing\\Routing.web.js":"8","E:\\Eventmaker\\eventmaker-client\\src\\components\\About.js":"9","E:\\Eventmaker\\eventmaker-client\\src\\routing\\routes.js":"10","E:\\Eventmaker\\eventmaker-client\\src\\components\\Contact.js":"11","E:\\Eventmaker\\eventmaker-client\\src\\components\\commonService.js":"12","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\EventCard.js":"13","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Calendar.js":"14","E:\\Eventmaker\\eventmaker-client\\src\\components\\CreateEvent.js":"15","E:\\Eventmaker\\eventmaker-client\\src\\components\\firebase-store.js":"16","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Form.js":"17","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\FormFields.js":"18","E:\\Eventmaker\\eventmaker-client\\src\\store.js":"19","E:\\Eventmaker\\eventmaker-client\\src\\actions\\postActions.js":"20","E:\\Eventmaker\\eventmaker-client\\src\\actions\\types.js":"21","E:\\Eventmaker\\eventmaker-client\\src\\reducers\\index.js":"22","E:\\Eventmaker\\eventmaker-client\\src\\reducers\\postReducer.js":"23","E:\\Eventmaker\\eventmaker-client\\src\\location.js":"24","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Signup.js":"25","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Login.js":"26","E:\\Eventmaker\\eventmaker-client\\src\\auth\\AuthService.js":"27","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\PaymentForm.js":"28","E:\\Eventmaker\\eventmaker-client\\src\\components\\Event.js":"29","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Footer.js":"30","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\ContactUs.js":"31","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Pricing.js":"32","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\About.js":"33","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Cities.js":"34","E:\\Eventmaker\\eventmaker-client\\src\\components\\Events.js":"35","E:\\Eventmaker\\eventmaker-client\\src\\shared\\Alert.js":"36","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Wallet.js":"37","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\MyBookings.js":"38","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\MyEvents.js":"39","E:\\Eventmaker\\eventmaker-client\\src\\components\\EditEvent.js":"40"},{"size":497,"mtime":1609264131808,"results":"41","hashOfConfig":"42"},{"size":1767,"mtime":1620985720525,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":10624,"mtime":1620991483287,"results":"45","hashOfConfig":"42"},{"size":1652,"mtime":1609066838412,"results":"46","hashOfConfig":"42"},{"size":3854,"mtime":1620974392290,"results":"47","hashOfConfig":"42"},{"size":2236,"mtime":1621000071307,"results":"48","hashOfConfig":"42"},{"size":138,"mtime":1608992827592,"results":"49","hashOfConfig":"42"},{"size":956,"mtime":1609301198196,"results":"50","hashOfConfig":"42"},{"size":475,"mtime":1621000071307,"results":"51","hashOfConfig":"42"},{"size":1590,"mtime":1609302220272,"results":"52","hashOfConfig":"42"},{"size":5438,"mtime":1617080861417,"results":"53","hashOfConfig":"42"},{"size":2398,"mtime":1621068885688,"results":"54","hashOfConfig":"42"},{"size":1218,"mtime":1610881814771,"results":"55","hashOfConfig":"42"},{"size":4140,"mtime":1621068885688,"results":"56","hashOfConfig":"42"},{"size":593,"mtime":1610890188099,"results":"57","hashOfConfig":"42"},{"size":10925,"mtime":1621068885688,"results":"58","hashOfConfig":"42"},{"size":598,"mtime":1609582297365,"results":"59","hashOfConfig":"42"},{"size":440,"mtime":1609301490766,"results":"60","hashOfConfig":"42"},{"size":668,"mtime":1609302139283,"results":"61","hashOfConfig":"42"},{"size":80,"mtime":1609302206612,"results":"62","hashOfConfig":"42"},{"size":146,"mtime":1609299753307,"results":"63","hashOfConfig":"42"},{"size":514,"mtime":1609302159782,"results":"64","hashOfConfig":"42"},{"size":3222,"mtime":1617437270269,"results":"65","hashOfConfig":"42"},{"size":9297,"mtime":1621068750995,"results":"66","hashOfConfig":"42"},{"size":4974,"mtime":1621068750994,"results":"67","hashOfConfig":"42"},{"size":773,"mtime":1615035076254,"results":"68","hashOfConfig":"42"},{"size":7916,"mtime":1621068885689,"results":"69","hashOfConfig":"42"},{"size":17719,"mtime":1621000651504,"results":"70","hashOfConfig":"42"},{"size":294,"mtime":1612080609704,"results":"71","hashOfConfig":"42"},{"size":168,"mtime":1612144433722,"results":"72","hashOfConfig":"42"},{"size":161,"mtime":1612144461244,"results":"73","hashOfConfig":"42"},{"size":155,"mtime":1612144448867,"results":"74","hashOfConfig":"42"},{"size":18037,"mtime":1614706590549,"results":"75","hashOfConfig":"42"},{"size":1719,"mtime":1617715815431,"results":"76","hashOfConfig":"42"},{"size":195,"mtime":1617446662235,"results":"77","hashOfConfig":"42"},{"size":184,"mtime":1614653459705,"results":"78","hashOfConfig":"42"},{"size":3534,"mtime":1617538868456,"results":"79","hashOfConfig":"42"},{"size":2515,"mtime":1621068885688,"results":"80","hashOfConfig":"42"},{"size":4408,"mtime":1621068654139,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"gi9y1b",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Eventmaker\\eventmaker-client\\src\\index.js",[],["179","180"],"E:\\Eventmaker\\eventmaker-client\\src\\App.js",["181"],"E:\\Eventmaker\\eventmaker-client\\src\\reportWebVitals.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Header.js",["182"],"E:\\Eventmaker\\eventmaker-client\\src\\components\\dashboard.js",["183"],"E:\\Eventmaker\\eventmaker-client\\src\\components\\Dashboard.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\AppTemplate.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\routing\\Routing.web.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\About.js",["184"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../actions/postActions';\r\nimport Contact from './Contact';\r\n\r\nclass About extends Component {\r\n\r\n    componentWillMount(){\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    render() {\r\n        const postItems = this.props.posts.map(post => (\r\n            <div key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n            </div>\r\n        ))\r\n        return (\r\n            <div>\r\n                <Contact/>\r\n                <h1>Posts</h1>\r\n                {postItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// About.PropTypes = {\r\n//     fetchPosts: PropTypes.func.isRequired, \r\n//     posts: PropTypes.array.isRequired\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(About);",["185","186"],"E:\\Eventmaker\\eventmaker-client\\src\\routing\\routes.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\Contact.js",["187"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createPosts } from '../actions/postActions';\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            title: '',\r\n            body: ''\r\n        }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const post = {\r\n            title: this.state.title,\r\n            body: this.state.body\r\n        }\r\n        this.props.createPosts(post);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Form</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                        <label>Title: </label><br/>\r\n                        <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.onChange} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Body: </label><br/>\r\n                        <input type=\"text\" name=\"body\" value={this.state.body} onChange={this.onChange} />\r\n                    </div>\r\n                    <br/>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Contact.prototype = {\r\n//     createPosts: PropTypes.func.isRequired\r\n// }\r\n\r\nexport default connect(null, { createPosts })(Contact);","E:\\Eventmaker\\eventmaker-client\\src\\components\\commonService.js",["188","189","190","191","192","193"],"import axios from \"axios\";\r\nimport { canUseDOM } from \"exenv\";\r\n\r\nexport default class CommonService {\r\n\r\n    static getApiUrl(){\r\n        var url = \"\";\r\n        const hostname = canUseDOM ? window.location.hostname : 'localhost';\r\n        if(hostname === 'localhost'){\r\n            url = \"http://localhost:5000/\";\r\n        }else{\r\n            url = \"https://event-maker-back.herokuapp.com/\";\r\n        }\r\n        return url;\r\n    }\r\n\r\n\r\n//********************************************************* USER API CALLS *********************************************************** */\r\n\r\n    // REGISTER\r\n    static regiserUser(data){\r\n        return axios.post(`${this.getApiUrl()}users/register`, data)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // LOGIN\r\n    static loginUser(data){\r\n        return axios.post(`${this.getApiUrl()}users/login`, data)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // GET ALL BOOKINGS\r\n    static getMyBookings(userId){\r\n        return axios.get(`${this.getApiUrl()}users/get-bookings/${userId}`)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n\r\n//********************************************************* EVENT API CALLS *********************************************************** */\r\n\r\n    // GET ALL EVENTS\r\n    static getEvents(){\r\n        return axios.get(`${this.getApiUrl()}events/get-events`)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // SEARCH EVENTS\r\n    static searchEvents(key){\r\n        return axios.get(`${this.getApiUrl()}events/search/${key}`)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // SAVE AN EVENT\r\n    static saveEvent(data){\r\n        return axios.post(`${this.getApiUrl()}events/post-an-event`, data)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // FIND AN EVENT\r\n    static getAnEvent(id){\r\n        return axios.get(`${this.getApiUrl()}events/get-an-event/${id}`)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // CONFIRM BOOKING / SEND BOOKING EMAIL\r\n    static sendBookingEmail(data, user, eventData){\r\n        let obj = {data, user, eventData};\r\n        return axios.post(`${this.getApiUrl()}events/confirm-booking`, obj)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // FIND EVENTS BY CATEGORY\r\n    static findEventsWithCategory(str){\r\n        return axios.get(`${this.getApiUrl()}events/category/${str}`)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n    // GET ALL POSTED EVENTS\r\n    static getMyEvents(userId){\r\n        return axios.get(`${this.getApiUrl()}events/get-events/${userId}`)\r\n                    .then(res => {return res.data})\r\n    }\r\n\r\n\r\n//********************************************************* COMMON FUNCTIONS *********************************************************** */\r\n\r\nstatic convertTime(time){\r\n    if(time.split(':')[0] >= 12){\r\n        return Number(time.split(':')[0])-12 + ':'+time.split(':')[1]+' PM';\r\n    }\r\n    else {\r\n        return time + ' AM';\r\n    }\r\n}\r\n\r\nstatic convertDate(d){\r\n    const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    const DAYS   = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    let date = new Date(d);\r\n    return DAYS[date.getDay()]+ ', '+ date.getDate()+' '+ MONTHS[date.getMonth()]\r\n}\r\n\r\nstatic trimString(str, range) {\r\n    return str.length > range ? (`${str.substr(0, range)}...`) : str;\r\n}\r\n\r\nstatic numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nstatic getCurrentCity(){\r\n    return localStorage.getItem('currentCity');\r\n}\r\n\r\nstatic setCurrentCity(city){\r\n    localStorage.setItem('currentCity', city);\r\n}\r\n\r\n// Show toast\r\nstatic showToast(text, duration = 3000) {\r\n    if(canUseDOM) {\r\n        document.getElementById('global-toast-text').text = text;\r\n        document.getElementById(\"global-toast-text\").innerText = text;\r\n        if(text.indexOf(\"\\n\") !== -1) {\r\n            var lines = text.split(\"\\n\");\r\n            var str = \"\";\r\n            for(var i=0;i<lines.length;i++) {\r\n                str += \"<p>\"+ lines[i] +\"</p>\"\r\n            }\r\n            document.getElementById(\"global-toast-text\").innerHTML = \"<div>\"+ str +\"</div>\";\r\n        }\r\n        document.getElementById('global-toast').style.display = \"block\"\r\n        setTimeout(() => {\r\n            document.getElementById('global-toast').style.display = \"none\";\r\n        }, 3000)\r\n    }\r\n}\r\n\r\n// get date\r\nstatic getDate = date => {\r\n    const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    var d = new Date(date);\r\n    if(d.getDate() == new Date().getDate() && d.getMonth() == new Date().getMonth()){\r\n        return 'Today';\r\n    }\r\n    else if(d.getDate() + 1 == new Date().getDate()+1 && d.getMonth()+1 == new Date().getMonth()+1){\r\n        return 'Tomorrow';\r\n    }\r\n    else if(d.getDate() - 1 == new Date().getDate()-1 && d.getMonth()-1 == new Date().getMonth()-1){\r\n        return 'Yesterday';\r\n    }\r\n    else{\r\n        return d.getDate()+' '+MONTHS[d.getMonth()]+' '+d.getFullYear();\r\n    }\r\n}\r\n\r\n\r\n\r\n}\r\n","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\EventCard.js",["194"],"import React from 'react';\r\nimport './../common.scss';\r\nimport Calendar from './Calendar';\r\nimport DefaultImage from './../../assets/images/banner-two.jpg';\r\nimport CommonService from './../commonService';\r\n// import { PinDropSharp } from '@material-ui/icons';\r\n\r\n function EventCard(props){\r\n\r\n    const editEvent = (id) => {\r\n        props.history.push({\r\n            pathname: `/edit-event`,\r\n            state: { eventId: id },\r\n        });\r\n    }\r\n\r\n    const getOnlineName = url => {\r\n        if(url) {\r\n            if(url.includes('google')){\r\n                return 'Google Meets';\r\n            }\r\n            else if(url.includes('teams')){\r\n                return 'Microsoft Teams';\r\n            }\r\n            else if(url.includes('zooom')){\r\n                return 'Zoom';\r\n            }else{\r\n                return 'Online Event';\r\n            }\r\n        }\r\n        return 'Online Event';\r\n    }\r\n\r\n    const openEvent = (data) => {\r\n        let str = data?.eventName?.toLowerCase()?.split(' ')?.join('-');\r\n        props.history.push({\r\n            pathname: `/event/${str}`,\r\n            state: { eventId: data._id },\r\n        });\r\n    }\r\n\r\n    return(\r\n        // <a href={props.hyperlink}>\r\n            <div className=\"event-card\" key={props.data._id}>\r\n                <img src={props.data.banner ? props.data.banner : DefaultImage} className=\"event-banner\" alt={props.data.eventName} onClick={()=> openEvent(props.data)} />\r\n                <Calendar startDate={props.data.startDate} endDate={props.data.endDate} />\r\n                <h1 className=\"event-name\">{props.data.eventName}</h1>\r\n                {props?.data?.eventMode === 'Online' ? \r\n                <span className=\"event-full-address\">{getOnlineName(props.data.onlineURL)}</span> :\r\n                <span className=\"event-full-address\">{props.data.city}{props.data.state && ', '+props.data.state}{props.data.country && ', '+props.data.country}</span> \r\n                }\r\n                {props.edit ? <button className=\"edit-btn\" onClick={(e)=> editEvent(props.data._id)}>\r\n                     Edit</button> :\r\n                <h3 style={{marginTop: -25, display: 'inline-block',float: 'right'}}>{props.data.entryMode === 'free' ? 'Free' : '₹'+ CommonService.numberWithCommas(CommonService.getAmount(props.data.ticketCategory))}</h3>}\r\n            </div>\r\n        // </a>\r\n    )\r\n}\r\n\r\nexport default EventCard;","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Calendar.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\CreateEvent.js",["195","196"],"import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport EventForm from './pages/Form';\r\nimport PaymentForm from './pages/PaymentForm';\r\nimport './common.scss';\r\nimport CommonService from './commonService';\r\nimport AuthService from './../auth/AuthService';\r\n\r\nclass CreateEvent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loader: false,\r\n            activeStep: 0,\r\n            eventBanner: null\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n      if(!AuthService.isLoggedIn()){\r\n        this.props.history.push({ \r\n          pathname: \"/login\", \r\n          state: { url: this.props.location.pathname }\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n      \r\n      setActiveStep = (step) => {\r\n          this.activeStep = step;\r\n      }\r\n\r\n      // handleNext = () => {\r\n      //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      // };\r\n\r\n      // handleBack = () => {\r\n      //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n      // };\r\n\r\n      // handleReset = () => {\r\n      //   setActiveStep(0);\r\n      // };\r\n\r\n\r\n      GetComponent(){\r\n        switch(this.state.activeStep) {\r\n          case 0:\r\n            return <EventForm onclick={this.changeHandle} />\r\n          case 1:\r\n            return <PaymentForm onclick={this.handlePaymentSetup} />\r\n            \r\n        }\r\n      }\r\n\r\n      changeHandle = (e) => {\r\n        console.log(e)\r\n        localStorage.setItem('eventdetails', JSON.stringify(e))\r\n        this.setState({ activeStep: this.state.activeStep+1 });\r\n        window.scrollTo(0,0);\r\n      }\r\n\r\n      handlePaymentSetup = (e)=> {\r\n        localStorage.setItem('paymentdetails', JSON.stringify(e))\r\n        this.setState({ activeStep: this.state.activeStep+1 });\r\n        let eventData = JSON.parse(localStorage.getItem('eventdetails'));\r\n        let paymentData = JSON.parse(localStorage.getItem('paymentdetails'));\r\n        const obj = Object.assign(eventData, paymentData)\r\n        // console.log(obj)\r\n        CommonService.saveEvent(obj).then((res) => {\r\n          // <AlertMessage label='Your event has been published'/>\r\n          console.log(res);\r\n            localStorage.removeItem('eventdetails')\r\n            localStorage.removeItem('paymentdetails')\r\n            localStorage.removeItem('full_address')\r\n            localStorage.removeItem('evtLat')\r\n            localStorage.removeItem('state')\r\n            localStorage.removeItem('city')\r\n            localStorage.removeItem('country')\r\n            localStorage.removeItem('evtLng')\r\n        })\r\n      }\r\n\r\n    render(){\r\n      // const classes = useStyles();\r\n      const steps = getSteps();\r\n        return(\r\n            <div className=\"create-event-div\">\r\n                <h1>Create an Event</h1>\r\n                <Stepper activeStep={this.state.activeStep} alternativeLabel>\r\n                    {steps.map((label) => (\r\n                      <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                      </Step>\r\n                    ))}\r\n                </Stepper>\r\n\r\n                  {this.GetComponent()}\r\n\r\n                <Backdrop open={this.state.loader}>\r\n                    <CircularProgress color=\"inherit\" style={{'color': '#fff'}}/>\r\n                </Backdrop>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getSteps() {\r\n  return ['Add Event Venue and Details', 'Setup Payment & Ticketing Method', 'Publish Your Event'];\r\n}\r\n\r\n// function getStepContent(stepIndex) {\r\n//   switch (stepIndex) {\r\n//     case 0:\r\n//       return 'Select campaign settings...';\r\n//     case 1:\r\n//       return 'What is an ad group anyways?';\r\n//     case 2:\r\n//       return 'This is the bit I really care about!';\r\n//     default:\r\n//       return 'Unknown stepIndex';\r\n//   }\r\n// }\r\n\r\nexport default CreateEvent;\r\n","E:\\Eventmaker\\eventmaker-client\\src\\components\\firebase-store.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Form.js",["197","198","199","200","201"],"import React, { useState, useEffect } from 'react';\r\nimport {initAutocomplete} from './../../location';\r\nimport { Input, Label } from './FormFields';\r\nimport { storage } from './../firebase-store';\r\nimport CommonService from './../commonService';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './../common.scss';\r\n\r\n\r\n function EventForm(props){\r\n\r\n    const options = [\"Adventurous\", \"Business\", \"Children\", \"Concert\", \"Corporate\", \"Education\", \"Entertainment\", \"Event\", \"Festival\", \"Finance\", \"Function\", \"Gaming\", \"Other\", \"Party\", \"Politics\", \"Private\", \"Psychology\", \"Religious\", \"Seminars\", \"Share Market\", \"Social\", \"Spiritual\", \"Sports\", \"Technology\", \"Travel\"]\r\n    const [eventName, setEventName] = useState('');\r\n    const [startDate, setStartDate] = useState(getCurrentDate());\r\n    const [endDate, setEndDate] = useState(getCurrentDate());\r\n    const [startTime, setStartTime] = useState(getCurrentTime());\r\n    const [endTime, setEndTime] = useState(getCurrentTime());\r\n    const [location, setLocation] = useState('');\r\n    const [eventCategory, setEventCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [banner, setBanner] = useState('');\r\n    const [eventMode, setEventMode] = useState('');\r\n    const [onlineURL, setOnlineURL] = useState('');\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const shouldBeDisabled = () => {\r\n        // return !eventName || !startDate || !endDate || !startTime || !endTime || !location || !description || !eventMode ||!eventCategory;\r\n        return false;\r\n    }\r\n    useEffect(()=> {\r\n        if(eventMode && eventMode != 'Online'){\r\n            initAutocomplete();\r\n        }else{\r\n\r\n        }\r\n    }, [eventMode]);\r\n\r\n    const clickEventBtn = () => {\r\n        const data = {\r\n            eventName,\r\n            eventCategory,\r\n            eventMode,\r\n            startDate,\r\n            endDate,\r\n            startTime,\r\n            endTime,\r\n            location,\r\n            onlineURL,\r\n            city: sessionStorage.getItem('city'),\r\n            state: sessionStorage.getItem('state'),\r\n            country: sessionStorage.getItem('country'),\r\n            full_address: sessionStorage.getItem('full_address'),\r\n            evtLat: sessionStorage.getItem('evtLat'),\r\n            evtLng: sessionStorage.getItem('evtLng'),\r\n            description,\r\n            banner,\r\n            posted_on: new Date().toISOString(),\r\n            organiser: JSON.parse(localStorage.getItem('user'))       \r\n        }\r\n        props.onclick(data)\r\n    }\r\n    \r\n\r\n    const setLocationFromLocalStorage = () => {\r\n            setLocation(JSON.parse(localStorage.getItem('eventdetails')).full_address || location)\r\n    }\r\n\r\n\r\n    const uploadFile = (e) => {\r\n        setLoader(true);\r\n        if(e.target.files[0]){\r\n            let file = e.target.files[0];\r\n            \r\n            const uploadTask = storage.ref(`bucket/${file.name}`).put(file);\r\n            uploadTask.on(\"state_changed\", snapshot => {},\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage.ref(\"bucket\")\r\n                .child(file.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                setBanner(url)\r\n                setLoader(false);\r\n                })\r\n            }\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        <div style={{marginTop: 30, marginBottom: 30}}>\r\n            <form>\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Enter event name\" \r\n                    isRequired={true} \r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Enter the name of your Event\" \r\n                    style={{width: 400}} \r\n                    className=\"input-field\" \r\n                    value={eventName}\r\n                    onChange={(e)=> setEventName(e.target.value)} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Select Event Category\" \r\n                    isRequired={true} \r\n                />\r\n                <select className=\"input-field\" style={{width: 414}} onChange={(e)=> setEventCategory(e.target.value)}>\r\n                    <option>Select</option>\r\n                    {options.map((option, key) => {\r\n                        return(\r\n                            <option value={option} key={ key }>{option}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Select Start Time\" \r\n                    isRequired={true} \r\n                />\r\n\r\n                <input \r\n                    type=\"date\" \r\n                    style={{width: 230, marginRight: 15}} \r\n                    className=\"input-field datepicker\" \r\n                    value={startDate}\r\n                    onChange={(e)=> setStartDate(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"time\" \r\n                    style={{width: 140, marginRight: 15}} \r\n                    className=\"input-field\" \r\n                    value={startTime}\r\n                    onChange={(e)=> setStartTime(e.target.value)} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Select End Time\" \r\n                    isRequired={true} \r\n                />\r\n                <input \r\n                    type=\"date\" \r\n                    style={{width: 230, marginRight: 15}} \r\n                    className=\"input-field\" \r\n                    id=\"datepicker\"\r\n                    value={endDate}\r\n                    onChange={(e)=> setEndDate(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"time\" \r\n                    style={{width: 140, marginRight: 15}} \r\n                    className=\"input-field\" \r\n                    value={endTime}\r\n                    onChange={(e)=> setEndTime(e.target.value)} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Event Location\" \r\n                    isRequired={true} \r\n                />\r\n                <select className=\"input-field\" onChange={(e)=> setEventMode(e.target.value)} style={{width: 414}}>\r\n                    <option>Select</option>\r\n                    <option value=\"Online\">Online / Virtually</option>\r\n                    <option value=\"Venue\">Venue</option>\r\n                </select>\r\n            </div>\r\n\r\n            {eventMode && <div>\r\n            {eventMode == 'Online' ?\r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Enter online URL\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter the URL to connect to event\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={onlineURL}\r\n                        id=\"online\"\r\n                        onChange={(e)=> setOnlineURL(e.target.value)} \r\n                    />\r\n            </div>\r\n            :\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Location Name\" \r\n                    isRequired={true} \r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Enter the place of Event\" \r\n                    style={{width: 400}} \r\n                    className=\"input-field\"\r\n                    id=\"pac-input\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    onBlur={() => setLocationFromLocalStorage()}\r\n                />\r\n                    <div id=\"map\"></div>\r\n            </div>}\r\n            </div>}\r\n            \r\n            <div className=\"form-input-container\" style={{position: 'relative', width: 412}}>\r\n                    <Label \r\n                        label=\"Upload Event Banner\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"file\" \r\n                        id=\"img\" \r\n                        name=\"eventmaker\" \r\n                        accept=\"video/*|image/*;capture=camera\" \r\n                        style={{display: 'none'}}\r\n                        onChange={(e)=> {uploadFile(e)}} \r\n                    />\r\n                    {banner ? \r\n                        <img src={banner} className=\"selected-img\" /> : \r\n                        <div className=\"upload-img-div\" onClick={()=> document.getElementById('img').click()}>\r\n                            <BackupIcon/>\r\n                        </div>                    \r\n                    }\r\n\r\n                </div>\r\n\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Description\" \r\n                    isRequired={true} \r\n                />\r\n                <textarea \r\n                    type=\"text\" \r\n                    placeholder=\"Enter the Description\" \r\n                    style={{width: 400, resize: 'none', height: 90}} \r\n                    className=\"input-field\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"continue-btn\" onClick={()=> clickEventBtn()} disabled={shouldBeDisabled()} >\r\n                <span>Continue to Payment method setup</span>\r\n                <ArrowForwardIcon/>\r\n            </button>\r\n            </form>\r\n\r\n            <Backdrop open={loader}>\r\n                    <CircularProgress color=\"inherit\" style={{'color': '#fff'}}/>\r\n            </Backdrop>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getCurrentDate(){\r\n    let date = new Date();\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n    return `${year}-${month < 10 ? '0'+month : month}-${day < 10 ? '0'+day : day}`;\r\n}\r\n\r\nfunction getCurrentTime(){\r\n    let time = new Date().toLocaleTimeString();\r\n    time = time.split(':');\r\n    return( `${time[0] < 10 ? \"0\"+time[0] : time[0]}:${time[1]}`)\r\n}\r\n\r\nexport default EventForm;\r\n","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\FormFields.js",["202"],"import React from 'react';\r\nimport './../common.scss';\r\n\r\nexport function Input(props){\r\n    return(\r\n        <input type={props.type} placeholder={props.placeholder} style={{width: props.width, marginRight: props.marginRight}} className=\"input-field\" value={props.value} onChange={(e)=> console.log(e.target.value)} />\r\n    )\r\n}\r\nexport function Label(props){\r\n    return(\r\n        <label className=\"label\">{props.label}</label>\r\n    )\r\n}\r\n\r\nexport function Anchor(props){\r\n    return(\r\n        <a className=\"anchor-non-hyper\">{props.label}</a>\r\n    )\r\n}\r\n","E:\\Eventmaker\\eventmaker-client\\src\\store.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\actions\\postActions.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\actions\\types.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\reducers\\index.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\reducers\\postReducer.js",["203"],"import { FETCH_POSTS, NEW_POST } from './../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    item: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_POSTS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            };\r\n        case NEW_POST:\r\n            return {\r\n                ...state,\r\n                item: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\Eventmaker\\eventmaker-client\\src\\location.js",["204"],"export const initAutocomplete = ()=> {\r\n  // if(document.getElementById(\"map\")){\r\n  \r\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      center: { lat: -33.8688, lng: 151.2195 },\r\n      zoom: 13,\r\n      mapTypeId: \"roadmap\",\r\n    });\r\n\r\n    function getLocality(place, area){\r\n      return place.find(a => a.types.includes(area))?.long_name;\r\n    }\r\n\r\n    // Create the search box and link it to the UI element.\r\n    const input = document.getElementById(\"pac-input\");\r\n    const searchBox = new window.google.maps.places.SearchBox(input);\r\n    map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(input);\r\n    // Bias the SearchBox results towards current map's viewport.\r\n    map.addListener(\"bounds_changed\", () => {\r\n      searchBox.setBounds(map.getBounds());\r\n    });\r\n    let markers = [];\r\n    // Listen for the event fired when the user selects a prediction and retrieve\r\n    // more details for that place.\r\n    searchBox.addListener(\"places_changed\", () => {\r\n      const places = searchBox.getPlaces();\r\n\r\n      if (places.length == 0) {\r\n        return;\r\n      }\r\n      // Clear out the old markers.\r\n      markers.forEach((marker) => {\r\n        marker.setMap(null);\r\n      });\r\n      markers = [];\r\n      // For each place, get the icon, name and location.\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      places.forEach((place) => {\r\n        if (!place.geometry) {\r\n          console.log(\"Returned place contains no geometry\");\r\n          return;\r\n        }\r\n        const icon = {\r\n          url: place.icon,\r\n          size: new window.google.maps.Size(71, 71),\r\n          origin: new window.google.maps.Point(0, 0),\r\n          anchor: new window.google.maps.Point(17, 34),\r\n          scaledSize: new window.google.maps.Size(25, 25),\r\n        };\r\n        // Create a marker for each place.\r\n        markers.push(\r\n          new window.google.maps.Marker({\r\n            map,\r\n            icon,\r\n            title: place.name,\r\n            position: place.geometry.location,\r\n          })\r\n        );\r\n        // console.log(getLocality(place.address_components, \"sublocality_level_2\"))\r\n        // console.log(getLocality(place.address_components, \"sublocality_level_1\"))\r\n        // console.log(getLocality(place.address_components, \"locality\"))\r\n        // console.log(getLocality(place.address_components, \"administrative_area_level_1\"))\r\n\r\n\r\n        sessionStorage.setItem('full_address', place.formatted_address)\r\n        sessionStorage.setItem('city', getLocality(place.address_components, \"locality\"))\r\n        sessionStorage.setItem('state', getLocality(place.address_components, \"administrative_area_level_1\"))\r\n        sessionStorage.setItem('country', getLocality(place.address_components, \"country\"))\r\n        sessionStorage.setItem('evtLat', place.geometry.location.lat())\r\n        sessionStorage.setItem('evtLng', place.geometry.location.lng())\r\n\r\n        if (place.geometry.viewport) {\r\n          // Only geocodes have viewport.\r\n          bounds.union(place.geometry.viewport);\r\n        } else {\r\n          bounds.extend(place.geometry.location);\r\n        }\r\n      });\r\n      map.fitBounds(bounds);\r\n    });\r\n      \r\n  // }\r\n  }","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Signup.js",["205","206","207","208","209","210","211","212"],"import React, { useState, useEffect } from 'react';\r\nimport './../components/common.scss';\r\nimport { storage } from './../components/firebase-store';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Label } from './../components/pages/FormFields';\r\nimport CommonService from './../components/commonService';\r\n\r\nexport default function Signup(props) {\r\n\r\n    function validateInput(e){\r\n        let val = e.target.value;\r\n        if(val == ''){\r\n            e.target.style.border='1px solid red !important'\r\n        }\r\n    }\r\n    const useStylesBootstrap = makeStyles((theme) => ({\r\n        arrow: {\r\n          color: '#c76358',\r\n        },\r\n        tooltip: {\r\n          backgroundColor: '#c76358',\r\n        },\r\n      }));\r\n    function BootstrapTooltip(props) {\r\n        const classes = useStylesBootstrap();\r\n      \r\n        return <Tooltip arrow classes={classes} {...props} />;\r\n      }\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailFocused, setEmailFocused] = useState(false);\r\n    const [passwordFocused, setPasswordFocused] = useState(false);\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [firstnameFocused, setFirstnameFocused] = useState(false);\r\n    const [lastnameFocused, setLastNameFocused] = useState(false);\r\n    const [avatar, setProfileImage] = useState('');\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [registered, setRegistered] = useState(false);\r\n\r\n\r\n    // UPLOAD IMAGE TO FIREBASE\r\n    function uploadFile (e){\r\n        setLoader(true);\r\n        if(e.target.files[0]){\r\n            let file = e.target.files[0];\r\n            \r\n            const uploadTask = storage.ref(`bucket/${file.name}`).put(file);\r\n            uploadTask.on(\"state_changed\", snapshot => {},\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage.ref(\"bucket\")\r\n                .child(file.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                console.log(url)\r\n                setProfileImage(url)\r\n                setLoader(false);\r\n                })\r\n            }\r\n            )\r\n        }\r\n        }\r\n    \r\n\r\n    function Register(e) {\r\n        e.preventDefault()\r\n        console.log(avatar)\r\n        if(firstName !== '' && lastName !== '' && email !== '' && password !== ''){\r\n            setLoader(true);\r\n            CommonService.regiserUser({firstName, lastName, email, password, avatar}).then((res) => {\r\n                console.log(res)\r\n                setLoader(false);\r\n                setRegistered(true);\r\n                setTimeout(()=> {\r\n                    window.location.href=\"/login\"\r\n                }, 2000)\r\n            })\r\n        }\r\n        else{\r\n            setShowErrorMessage(true);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            \r\n        {!registered ? \r\n            <form style={{display: 'block', margin: '0 auto', width: '40%'}} onSubmit={(e)=> Register(e)}>\r\n                {showErrorMessage && \r\n                    <Alert severity=\"error\" color=\"warning\">\r\n                        All fields are mandatory\r\n                    </Alert>\r\n                }\r\n                <h5 className=\"heading\">Register for complete access </h5>\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"First Name\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter your First name\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setFirstnameFocused(true)} \r\n                        onChange={(e)=> setFirstName(e.target.value)} \r\n                        value={firstName} \r\n                    />\r\n                        {firstnameFocused && firstName === '' && \r\n                        <BootstrapTooltip title=\"First Name can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                        }\r\n\r\n                </div>\r\n\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Last Name\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter your Last name\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setLastNameFocused(true)} \r\n                        onChange={(e)=> setLastName(e.target.value)} \r\n                        value={lastName} \r\n                    />\r\n                        {lastnameFocused && lastName === '' && \r\n                        <BootstrapTooltip title=\"Last Name can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                        }\r\n\r\n                </div>\r\n                \r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Email\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"email\" \r\n                        placeholder=\"Enter your email\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setEmailFocused(true)} \r\n                        onChange={(e)=> setEmail(e.target.value)} \r\n                        value={email} \r\n                    />\r\n                        {emailFocused && email === '' && \r\n                        <BootstrapTooltip title=\"Email can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                        }\r\n\r\n                </div>\r\n\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Password\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"password\" \r\n                        placeholder=\"Enter your password\" \r\n                        className=\"input-field\" \r\n                        style={{width: 300}} \r\n                        onBlur={validateInput, ()=>setPasswordFocused(true)} \r\n                        onChange={(e)=> setPassword(e.target.value)} \r\n                        value={password} \r\n                    />\r\n                    {passwordFocused && password === '' && \r\n                        <BootstrapTooltip title=\"Password can not be empty\">\r\n                            <InfoIcon className=\"info-icon\"  />\r\n                        </BootstrapTooltip>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"form-input-container\" style={{position: 'relative', width: 310}}>\r\n                    <Label \r\n                        label=\"Upload profile photo\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"file\" \r\n                        id=\"img\" \r\n                        name=\"eventmaker\" \r\n                        accept=\"video/*|image/*;capture=camera\" \r\n                        style={{display: 'none'}}\r\n                        onChange={(e)=> {uploadFile(e)}} \r\n                    />\r\n                    {avatar ? \r\n                        <img src={avatar} className=\"selected-img\" /> : \r\n                        <div className=\"upload-img-div\" onClick={()=> document.getElementById('img').click()}>\r\n                            <BackupIcon/>\r\n                        </div>                    \r\n                    }\r\n\r\n                </div>\r\n                <button type=\"submit\" className=\"continue-btn\">Register</button>\r\n                <span className=\"not-a-member\">Already a Member? <a onClick={()=> props.history.push(\"/login\")} className=\"anchor\">Sign in</a></span>\r\n            </form>\r\n            : \r\n            <Alert severity=\"success\">You have registered Successfully.</Alert>\r\n            }\r\n\r\n            {/* <Backdrop open={loader}>\r\n\r\n            </Backdrop> */}\r\n            {loader &&\r\n                <div className=\"backdrop\">\r\n                    <CircularProgress color=\"inherit\" style={{'color': '#FFF'}}/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\Eventmaker\\eventmaker-client\\src\\auth\\Login.js",["213","214","215","216"],"E:\\Eventmaker\\eventmaker-client\\src\\auth\\AuthService.js",["217","218"],"import React, { Component } from 'react';\r\n\r\nexport default class AuthService extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: false,\r\n            userDetails:{\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                avatar: ''\r\n            }\r\n        }\r\n        let that = this;\r\n    }\r\n    \r\n    static isLoggedIn(){\r\n        return localStorage.getItem('loggedIn');\r\n    }\r\n    static getUserDetails(){\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n    static setLoggedIn(val){\r\n        this.setState({ loggedIn: val });\r\n    }\r\n    static setUserDetails(data){\r\n        this.setState({userDetails: {...data}})\r\n    }\r\n\r\n    \r\n\r\n\r\n} ","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\PaymentForm.js",["219","220","221"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Input, Label } from './FormFields';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './../common.scss';\r\n\r\n\r\n\r\nfunction PaymentForm(props) {\r\n\r\n    const [entryMode, setEntrymode] = useState('');\r\n    const [avlSeats, setAvlSeats] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [ticketCategory, setTicketCategory] = useState([]);\r\n    \r\n    // TO BE INSERTED INTO TICKET CATEGORY ARRAY\r\n    const [seats, setSeats] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    \r\n    const handleChange = (event) => {\r\n        setEntrymode(event.target.value);  \r\n    };\r\n\r\n    const saveCategory = () => {\r\n        let data = {\r\n            id: new Date().getTime(), seats, category, amount, description\r\n        }\r\n        setTicketCategory(oldArray => [...oldArray, data]);\r\n\r\n        setIsOpen(false);\r\n        setAmount('');\r\n        setCategory([]);\r\n        setSeats('');\r\n        setDescription('');\r\n        console.log(ticketCategory)\r\n    }\r\n\r\n    const clickEventBtn = () => {\r\n        const data = {\r\n            entryMode,\r\n            // seats,\r\n            // amount,\r\n            currency: 'INR',\r\n            ticketCategory,\r\n            avlSeats\r\n        }\r\n        props.onclick(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{fontSize: 17, fontWeight: 600}}>Setup tickets and seats</h1>\r\n            <div className=\"form-input-container\">\r\n                <Label \r\n                    label=\"Ticketing Method\" \r\n                    isRequired={true} \r\n                />\r\n                <RadioGroup aria-label=\"ticketing\" name=\"paid\" value={entryMode} onChange={handleChange} className=\"radiogroup\">\r\n                    <FormControlLabel value=\"free\" control={<Radio color=\"default\"/>} label=\"Free Entry\" />\r\n                    <FormControlLabel value=\"paid\" control={<Radio color=\"default\"/>} label=\"Paid Entry\" />\r\n                </RadioGroup>\r\n            </div>  \r\n\r\n            {ticketCategory.length>0 &&\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Category</TableCell>\r\n                            <TableCell align=\"right\">Seats</TableCell>\r\n                            <TableCell align=\"right\">Amount</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {ticketCategory.map((row) => (\r\n                            <TableRow key={row.category}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.category}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.seats}</TableCell>\r\n                                <TableCell align=\"right\">₹ {row.amount}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            }\r\n\r\n\r\n            {entryMode === 'free' && \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"How many seats are available?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Ex. 100\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={avlSeats}\r\n                        onChange={(e)=> setAvlSeats(e.target.value)} \r\n                    />\r\n                </div>  \r\n            }\r\n\r\n            {isOpen && \r\n            <div>\r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Enter ticket category?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"ex. Silver, Gold, Diamond\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={category}\r\n                        onChange={(e)=> setCategory(e.target.value)} \r\n                    />\r\n                </div>  \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Ticket Amount?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter ticket amount\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={amount}\r\n                        onChange={(e)=> setAmount(e.target.value)} \r\n                    />\r\n                </div>  \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"How many Seats are available?\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Enter total seats/ticket are available\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={seats}\r\n                        onChange={(e)=> setSeats(e.target.value)} \r\n                    />\r\n                </div>  \r\n                <div className=\"form-input-container\">\r\n                    <Label \r\n                        label=\"Write some description (Optional)\" \r\n                        isRequired={true} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Ex. No outside foods allowed\" \r\n                        style={{width: 400}} \r\n                        className=\"input-field\" \r\n                        value={description}\r\n                        onChange={(e)=> setDescription(e.target.value)} \r\n                    />\r\n                </div>  \r\n            </div>}\r\n\r\n            {entryMode === 'paid' &&\r\n            <div style={{margin: '20px 0'}}>\r\n                {!isOpen ? <span className=\"add-category\" onClick={() => setIsOpen(true)}><AddIcon/>Add ticket category</span> :\r\n                 <button type=\"button\" className=\"save-category\" onClick={() => saveCategory()}>Save</button>}\r\n            </div>}\r\n\r\n            {entryMode !== '' &&\r\n            <button type=\"button\" className=\"continue-btn\" onClick={()=> clickEventBtn()} >\r\n                <span>Publish Event</span>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" style={{fill: '#fff', width: 18}} viewBox=\"0 0 24 24\"><path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"/></svg>\r\n\r\n            </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PaymentForm;","E:\\Eventmaker\\eventmaker-client\\src\\components\\Event.js",["222","223","224"],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Footer.js",["225"],"import React from 'react';\r\nimport Logo1 from './../assets/images/event-maker-logo1.png';\r\nimport './Footer.scss';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <img src={Logo1} style={{width: 160, float: 'left'}}/>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\ContactUs.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Pricing.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\About.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Cities.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\Events.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\shared\\Alert.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\Wallet.js",["226","227"],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction Wallet() {\r\n    return (\r\n        <div>\r\n            <h1>Wallet</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wallet;","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\MyBookings.js",["228","229"],"import React, { useState, useEffect } from 'react';\r\nimport CommonService from '../commonService';\r\nimport AuthService from '../../auth/AuthService';\r\nimport PlaceholderImage from '../../assets/images/placeholderimage.png';\r\nimport './Bookings.scss';\r\n\r\n\r\nfunction MyBookings(props) {\r\n\r\n    const [bookingData, setBookingData] = useState([]);\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(!AuthService.isLoggedIn()){\r\n            props.history.push({ \r\n              pathname: \"/login\", \r\n              state: { url: props.location.pathname }\r\n            })\r\n        }\r\n        else{\r\n            setUserData(AuthService.getUserDetails());\r\n            getBookingData(AuthService.getUserDetails().id);\r\n        }\r\n    }, []);\r\n\r\n    const getBookingData = (id) => {\r\n        CommonService.getMyBookings(id).then((res) => {\r\n            // console.log(res);\r\n            setBookingData(res.bookings)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"booking-div\">\r\n            <h1>My Bookings</h1>\r\n            <div>\r\n                {bookingData?.map((data) => {\r\n                    return(\r\n                        <div className=\"bookings-container\">\r\n                            <div>\r\n                                <img src={data.eventData.banner || PlaceholderImage } alt={data.eventData.eventName} className=\"booking-image\"/>\r\n                            </div>\r\n                            <div>\r\n                                <h4>{data.eventData.eventName}</h4>\r\n                                <span className=\"booked-event-date\">On {CommonService.getDate(data.eventData.startDate)}</span>\r\n                                <span className=\"booked-event-date\" style={{marginTop: 15, width: '75%'}}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" className=\"location-icon\" viewBox=\"0 0 24 24\"><path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/></svg>\r\n                                    {data.eventData.full_address}\r\n                                </span>\r\n                            </div>\r\n                            {data.eventData.entryMode === 'free' ? \r\n                                <div>\r\n                                    <h4 style={{fontSize: 12, color: '#555'}}>Total seats booked:  {data.bookingDetails}</h4>\r\n                                    <h2 className=\"bottom\">Free</h2>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <h4 style={{fontSize: 12, color: '#555'}}>Total seats booked:  {Number(data.bookingDetails.map(a => a.ticket_count).reduce((a, b) => a+b))}</h4>\r\n                                    <h2 className=\"bottom\" style={{marginTop: 50}}>₹ {Number(data.bookingDetails.map(a => a.amount).reduce((a, b) => Number(a)+Number(b)))}</h2>\r\n                                </div>\r\n                            }\r\n                            \r\n                            <div>\r\n                                <h4 className=\"booked-on\">Booked on {CommonService.getDate(data.bookedOn)}</h4>\r\n                                <button className=\"view-ticket\">View Ticket</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyBookings;","E:\\Eventmaker\\eventmaker-client\\src\\components\\pages\\MyEvents.js",[],"E:\\Eventmaker\\eventmaker-client\\src\\components\\EditEvent.js",["230","231","232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":30,"column":99,"nodeType":"239","messageId":"240","endLine":30,"endColumn":100,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":152,"column":13,"nodeType":"244","endLine":152,"endColumn":131},{"ruleId":"242","severity":1,"message":"243","line":18,"column":17,"nodeType":"244","endLine":18,"endColumn":64},{"ruleId":"245","severity":1,"message":"246","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":17},{"ruleId":"233","replacedBy":"249"},{"ruleId":"235","replacedBy":"250"},{"ruleId":"245","severity":1,"message":"246","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":143,"column":20,"nodeType":"253","messageId":"254","endLine":143,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":143,"column":60,"nodeType":"253","messageId":"254","endLine":143,"endColumn":62},{"ruleId":"251","severity":1,"message":"252","line":146,"column":29,"nodeType":"253","messageId":"254","endLine":146,"endColumn":31},{"ruleId":"251","severity":1,"message":"252","line":146,"column":73,"nodeType":"253","messageId":"254","endLine":146,"endColumn":75},{"ruleId":"251","severity":1,"message":"252","line":149,"column":29,"nodeType":"253","messageId":"254","endLine":149,"endColumn":31},{"ruleId":"251","severity":1,"message":"252","line":149,"column":73,"nodeType":"253","messageId":"254","endLine":149,"endColumn":75},{"ruleId":"245","severity":1,"message":"255","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":22},{"ruleId":"245","severity":1,"message":"256","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":54,"column":9,"nodeType":"259","messageId":"260","endLine":60,"endColumn":10},{"ruleId":"245","severity":1,"message":"261","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":15},{"ruleId":"245","severity":1,"message":"262","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":21},{"ruleId":"251","severity":1,"message":"263","line":35,"column":35,"nodeType":"253","messageId":"254","endLine":35,"endColumn":37},{"ruleId":"251","severity":1,"message":"252","line":187,"column":24,"nodeType":"253","messageId":"254","endLine":187,"endColumn":26},{"ruleId":"242","severity":1,"message":"243","line":237,"column":25,"nodeType":"244","endLine":237,"endColumn":70},{"ruleId":"264","severity":1,"message":"265","line":17,"column":9,"nodeType":"244","endLine":17,"endColumn":41},{"ruleId":"266","severity":1,"message":"267","line":8,"column":1,"nodeType":"268","endLine":23,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":28,"column":25,"nodeType":"253","messageId":"254","endLine":28,"endColumn":27},{"ruleId":"245","severity":1,"message":"269","line":1,"column":27,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"251","severity":1,"message":"252","line":17,"column":16,"nodeType":"253","messageId":"254","endLine":17,"endColumn":18},{"ruleId":"270","severity":1,"message":"271","line":118,"column":46,"nodeType":"272","messageId":"273","endLine":118,"endColumn":47},{"ruleId":"270","severity":1,"message":"271","line":140,"column":46,"nodeType":"272","messageId":"273","endLine":140,"endColumn":47},{"ruleId":"270","severity":1,"message":"271","line":162,"column":46,"nodeType":"272","messageId":"273","endLine":162,"endColumn":47},{"ruleId":"270","severity":1,"message":"271","line":184,"column":46,"nodeType":"272","messageId":"273","endLine":184,"endColumn":47},{"ruleId":"242","severity":1,"message":"243","line":209,"column":25,"nodeType":"244","endLine":209,"endColumn":70},{"ruleId":"264","severity":1,"message":"265","line":217,"column":66,"nodeType":"244","endLine":217,"endColumn":132},{"ruleId":"245","severity":1,"message":"269","line":1,"column":27,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"271","line":89,"column":46,"nodeType":"272","messageId":"273","endLine":89,"endColumn":47},{"ruleId":"270","severity":1,"message":"271","line":111,"column":46,"nodeType":"272","messageId":"273","endLine":111,"endColumn":47},{"ruleId":"264","severity":1,"message":"265","line":122,"column":66,"nodeType":"244","endLine":122,"endColumn":133},{"ruleId":"245","severity":1,"message":"274","line":1,"column":8,"nodeType":"247","messageId":"248","endLine":1,"endColumn":13},{"ruleId":"245","severity":1,"message":"275","line":15,"column":13,"nodeType":"247","messageId":"248","endLine":15,"endColumn":17},{"ruleId":"245","severity":1,"message":"269","line":1,"column":27,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"276","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":16},{"ruleId":"245","severity":1,"message":"261","line":2,"column":18,"nodeType":"247","messageId":"248","endLine":2,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":182,"column":29,"nodeType":"244","endLine":182,"endColumn":95},{"ruleId":"251","severity":1,"message":"252","line":327,"column":121,"nodeType":"253","messageId":"254","endLine":327,"endColumn":123},{"ruleId":"251","severity":1,"message":"252","line":361,"column":126,"nodeType":"253","messageId":"254","endLine":361,"endColumn":128},{"ruleId":"242","severity":1,"message":"243","line":9,"column":13,"nodeType":"244","endLine":9,"endColumn":67},{"ruleId":"245","severity":1,"message":"277","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"269","line":1,"column":27,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"278","line":11,"column":12,"nodeType":"247","messageId":"248","endLine":11,"endColumn":20},{"ruleId":"279","severity":1,"message":"280","line":24,"column":8,"nodeType":"281","endLine":24,"endColumn":10,"suggestions":"282"},{"ruleId":"270","severity":1,"message":"271","line":60,"column":59,"nodeType":"272","messageId":"273","endLine":60,"endColumn":60},{"ruleId":"270","severity":1,"message":"271","line":81,"column":59,"nodeType":"272","messageId":"273","endLine":81,"endColumn":60},{"ruleId":"270","severity":1,"message":"271","line":96,"column":59,"nodeType":"272","messageId":"273","endLine":96,"endColumn":60},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["285","286"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["283"],["284"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PinDropSharp' is defined but never used.","'makeStyles' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Input' is defined but never used.","'CommonService' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'React' is defined but never used.","'that' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'userData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'props.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["287"],"no-global-assign","no-unsafe-negation",{"messageId":"288","fix":"289","desc":"290"},{"messageId":"291","fix":"292","desc":"293"},{"desc":"294","fix":"295"},"removeEscape",{"range":"296","text":"297"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"298","text":"299"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.history, props.location.pathname]",{"range":"300","text":"301"},[1240,1241],"",[1240,1240],"\\",[767,769],"[props.history, props.location.pathname]"]